name: Build and Push Docker Image

on:
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Created release tag (e.g., v1.0.0)'
        required: true
      prerelease:
        description: 'Is this a prerelease build?'
        default: false

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    env:
      # Use release tag if it's a release event, or workflow input otherwise
      APP_VERSION: ${{ github.event.release.tag_name || inputs.release_tag }}
      IS_PRERELEASE: ${{ github.event.release.prerelease || inputs.prerelease }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Use release tag for the ref if provided
          ref: ${{ github.event.release.tag_name || inputs.release_tag }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker Image alpine
        uses: docker/build-push-action@v6
        with:
          push: true
          build-args: APP_VERSION=${{env.APP_VERSION}}
          file: deploy/alpine/Dockerfile
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}:${{ env.APP_VERSION }}-alpine
        env:
          APP_VERSION: ${{ env.APP_VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          build-args: APP_VERSION=${{env.APP_VERSION}}
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}:latest
            ${{ secrets.DOCKER_REGISTRY }}:${{ env.APP_VERSION }}
        env:
          APP_VERSION: ${{ env.APP_VERSION }}
        if: ${{ env.IS_PRERELEASE == 'false' }}

      - name: Build and push Docker image (prerelease)
        uses: docker/build-push-action@v6
        with:
          push: true
          build-args: APP_VERSION=${{env.APP_VERSION}}
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}:${{ env.APP_VERSION }}
        env:
          APP_VERSION: ${{ env.APP_VERSION }}
        if: ${{ env.IS_PRERELEASE == 'true' }}
